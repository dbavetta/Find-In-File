<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FindInFile.Wpf"
        xmlns:viewModels="clr-namespace:FindInFile.Wpf.ViewModels"
        xmlns:utilities="clr-namespace:FindInFile.Wpf.Utilities"
        x:Class="FindInFile.Wpf.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="700" Width="1000" MinHeight="400" MinWidth="750"
        WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <viewModels:FindTextViewModel x:Key="findTextViewModel"/>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="120"/>
            <RowDefinition Height="3*"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <!-- Find group -->
        <GroupBox Header="Find What:" Margin="5,5,2.5,5">
            <StackPanel Orientation="Vertical" Margin="5">
                <DockPanel>
                    <TextBox x:Name="queryTextBox" Height="20" Text="{Binding QueryText, Source={StaticResource findTextViewModel}}"/>
                </DockPanel>
                <StackPanel Orientation="Horizontal" Margin="0,10">
                    <Button x:Name="findButton" Command="{Binding FindClicked, Source={StaticResource findTextViewModel}}" Background="#FF9FF967">
                        <TextBlock Text="FIND" Margin="15,5" FontWeight="Bold" Foreground="#FF198005"/>
                    </Button>
                    <!-- Search Options CheckBox Grid-->
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <CheckBox Grid.Column="0" Grid.Row="0" x:Name="recursiveCheckBox" Content="Recursive" IsChecked="{Binding RecursiveChecked, Source={StaticResource findTextViewModel}}" Margin="10,0,10,0"/>
                        <CheckBox Grid.Column="0" Grid.Row="1" x:Name="fuzzySearchCheckBox" Content="Fuzzy Search" IsChecked="{Binding FuzzySearchChecked, Source={StaticResource findTextViewModel}}" Margin="10,5,10,0"/>
                        <CheckBox Grid.Column="1" Grid.Row="0" x:Name="matchCaseCheckBox" Content="Match Case" IsChecked="{Binding MatchCaseChecked, Source={StaticResource findTextViewModel}}" Margin="0,0,0,0"/>
                        <CheckBox Grid.Column="1" Grid.Row="1" x:Name="copyToClipboardCheckBox" Content="Copy Search To Clipboard" IsChecked="{Binding CopyToClipboardChecked, Source={StaticResource findTextViewModel}}" Margin="0,5,0,0"/>
                    </Grid>
                </StackPanel>
            </StackPanel>
        </GroupBox>
        <DockPanel Grid.Column="1" Margin="2.5,5,5,5">
            <!-- Folder Path Group -->
            <GroupBox Header="Folder Path" DockPanel.Dock="Top">
                <DockPanel Margin="5">
                    <Button x:Name="browseFolderPathButton" DockPanel.Dock="Right" Margin="5,0,0,0" Command="{Binding BrowseClick, Source={StaticResource findTextViewModel}}">
                        <TextBlock Text="Browse" Margin="5,0"/>
                    </Button>
                    <TextBox x:Name="rootPathTextBox" Height="20" Text="{Binding RootPathText, Source={StaticResource findTextViewModel}}" />
                </DockPanel>
            </GroupBox>
            <!-- filter Group -->
            <GroupBox Header="Filter">
                <DockPanel Margin="5">
                    <Button x:Name="advancedFilterButton" DockPanel.Dock="Right" Margin="5,0,0,0" Command="{Binding AdvancedClick, Source={StaticResource findTextViewModel}}">
                        <TextBlock Text="Advanced" Margin="5,0"/>
                    </Button>
                    <TextBox x:Name="filterTextBox" Height="20" Text="{Binding FilterText, Source={StaticResource findTextViewModel}}" />
                </DockPanel>
            </GroupBox>
        </DockPanel>
        <DockPanel Grid.Row ="1" Grid.ColumnSpan="2" Margin="5">
            <ListView x:Name="resultsListView" 
                      ItemsSource="{Binding MatchList, Source={StaticResource findTextViewModel}}">
                <ListView.Resources>
                    <!--Template to highlight and display the matched text-->
                    <DataTemplate x:Key="LineMatchtemplate">
                        <ItemsControl x:Name="LineMatchStackPanel" Grid.Column="0">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Button Content="{Binding ItemName}"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <!--<StackPanel Name="LineMatchStackPanel" Orientation="Horizontal">
                            <TextBlock Text="{Binding LineNumber}" />
                            <TextBlock Text=" " />
                            <TextBlock Text="{Binding LineNumber}" Foreground="Red" />
                            <TextBlock Text=" " />
                            <TextBlock Text="{Binding LineNumber}" />
                        </StackPanel>-->
                    </DataTemplate>
                </ListView.Resources>
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <EventSetter Event="MouseDoubleClick" Handler="HandleListViewDoubleClick" />
                    </Style>
                </ListView.ItemContainerStyle >
                <ListView.View>
                    <GridView>
                        <!-- TODO: When settings are implemented, change path to display either full or shortened path based on what the user has saved-->
                        <GridViewColumn Header="File Path" DisplayMemberBinding="{Binding ShortenedPath}" Width="AUTO"/>
                        <GridViewColumn Header="Line Number" DisplayMemberBinding="{Binding LineNumber}" Width="AUTO"/>
                        <GridViewColumn Header="Find Results" DisplayMemberBinding="{Binding MatchedLine}" Width="AUTO"/>
                        <GridViewColumn Header ="Test Column" CellTemplate="{StaticResource LineMatchtemplate}" Width="AUTO"/>
                    </GridView>
                </ListView.View>
            </ListView>
        </DockPanel>
        <DockPanel x:Name="statusBarDockPanel" Grid.Row="2" Grid.ColumnSpan="2">
            <StatusBar DockPanel.Dock="Bottom" >
                <TextBlock Name="statusBarTextBlock" Text="{Binding StatusBarText, Source={StaticResource findTextViewModel}}" Margin="5,0" Foreground="{Binding StatusBarTextColor, Source={StaticResource findTextViewModel}}"/>
                <Separator/>
                <Menu>
                    <MenuItem Name="DebuggerConsoleStrip">
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <Image Name="DubbugerButton" Source="Resources/Debugger-Icon.png"/>
                                <ContentPresenter Content="Debug Data" />
                            </StackPanel>
                        </MenuItem.Header>
                        <MenuItem Header="..."/>
                    </MenuItem>
                </Menu>
            </StatusBar>
        </DockPanel>
    </Grid>
</Window>
